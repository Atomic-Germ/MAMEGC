name: Build / Release

on:
  push:
    branches: [main, master, develop]
  pull_request:
  release:
    types: [created]

jobs:
  build:
    name: Build GameCube
    runs-on: ubuntu-latest
    container: devkitpro/devkitppc:20240612

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Build GameCube
      run: |
        make -f Makefile.gc -j2

    - name: Copy artifact
      run: |
        mkdir -p dist/MAME2003-GameCube
        cp executables/mamegc-gc.dol dist/MAME2003-GameCube/
        cp README.md dist/MAME2003-GameCube/ || true

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: MAME2003-GameCube
        path: dist/MAME2003-GameCube/
        retention-days: 30

  build-pgo:
    name: Build PGO Instrumented (GameCube)
    runs-on: ubuntu-latest
    container: devkitpro/devkitppc:20240612
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4

    - name: Build PGO instrumented
      run: |
        make -f Makefile.gc pgo-generate -j2

    - name: Upload PGO instrumented build
      uses: actions/upload-artifact@v4
      with:
        name: MAME2003-GameCube-PGO-Instrumented
        path: executables/mamegc-gc_pgo_gen.dol
        retention-days: 7

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [build]
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'

    steps:
    - name: Checkout repo
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist

    - name: Package release
      run: |
        cd dist/MAME2003-GameCube
        zip -r ../MAME2003-GameCube.zip *

    - name: Update Git tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -f Pre-release
        git push -f origin Pre-release

    - name: Create release
      uses: ncipollo/release-action@v1
      with:
        prerelease: true
        allowUpdates: true
        removeArtifacts: true
        replacesArtifacts: false
        tag: Pre-release
        artifacts: "dist/*.zip"
